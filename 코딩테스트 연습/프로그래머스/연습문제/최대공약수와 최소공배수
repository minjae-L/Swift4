두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요.
배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다.
예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.



func solution(_ n:Int, _ m:Int) -> [Int] {
    var nArr = [Int]()
    var mArr = [Int]()
    var result = [Int]()
    var seq = 1
    for i in 1...n {
        if n % i == 0 {
            nArr.append(i)
        }
    }
    for i in 1...m {
        if m % i == 0 {
            mArr.append(i)
        }
    }
    guard let max = nArr.filter({ mArr.contains($0)}).max() else {
        return []
    }
    result.append(max)
    nArr = []
    mArr = []
    
    while seq > 0 {
        nArr.append(n * seq)
        mArr.append(m * seq)
        
        if nArr.filter({ mArr.contains($0)}).count >= 1 {
            guard let min = nArr.filter({ mArr.contains($0)}).min() else {
                return []
            }
            result.append(min)
            break
        }
        seq += 1
    }
    return result
}

